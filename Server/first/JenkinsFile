pipeline {
    agent any 


    stages {

//        stage('Prepare') {
//            steps {
//                git branch: 'master',
//                    url: 'https://April_07@bitbucket.org/squeezebits/abtest.git'
//            }
//            
//            post {
//                success { 
//                    sh 'echo "Successfully Cloned Repository"'
//                }
//                failure {
//                    sh 'echo "Fail Cloned Repository"'
//                }
//            }    
//        }

//        stage('Build') {
//            steps {
//                sh 'chmod +x gradlew'
//                sh  './gradlew clean build'


//                sh 'ls -al ./'
//            }
//            post {
//                success {
//                    echo 'gradle build success'
//                }

//                failure {
//                    echo 'gradle build failed'
//                }
//            }
//        }

        stage('Cleanup') {
            steps {
                script {
                    try {
                        sh "docker stop docker-abtest"
                        sh "docker rm docker-abtest"
                        sh "docker rmi abtest"
                    } catch(e) {
                        sh 'exit 0'
                    }
                }
            }
        }    

        stage('Dockerizing'){
            steps{
                sh 'echo " Image Bulid Start"'
                sh 'docker build . -t abtest'
            }
            post {
                success {
                    sh 'echo "Bulid Docker Image Success"'
                }

                failure {
                    sh 'echo "Bulid Docker Image Fail"'
                }
            }
        }

        stage('Deploy') {
            steps {
                sh 'docker run --name docker-abtest -d -p 17047:17047 abtest'
                sh 'docker run --name docker-abtest-mongodb -d -p 27017:27017 mongo:latest'
            }

            post {
                success {
                    echo 'success'
                }

                failure {
                    echo 'failed'
                }
            }
        }

    }
}
