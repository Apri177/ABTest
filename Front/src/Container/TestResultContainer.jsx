import { useEffect, useState } from "react"
import { useDispatch, useSelector } from "react-redux"
import BarChart from "../Components/Test/BarChart"

const TestResultContainer = () => {

    const dispatch = useDispatch()
    const preTest = useSelector(state => state.test.preTest)
    const [test, setTest] = useState({

    })

    useEffect(() => {
        setTest(preTest)
        console.log(test);
    }, [dispatch, preTest, test])

    return (
        <div className="test-result-container">
            <div className="container">
                <div className="sec1">

                </div>
                <div className="sec2">
                    <div id="test-info">
                        <p id="test-sel">
                            Binomial Test 
                        </p>
                        <p id="desc-test">
                        Used a Binomial Test to verify if there was a significant preference difference between images generated by the two models (p=0.05).
                        </p>
                    </div>
                    <div id="model-div">
                        <div id="model-1">
                            <img src="/images/orange.svg" alt="o" />
                            <div style={{
                                width: "1vw"
                            }}>
                            </div>
                            <p className="model-name">
                                {"~/" + test.file1}
                            </p>
                        </div>
                        <div id="model-2">
                            <img src="/images/soda.svg" alt="o" />
                            <div style={{
                                width: "1vw"
                            }}>
                            </div>
                            <p className="model-name">
                                {"~/" + test.file2}
                            </p>
                        </div>
                    </div>
                    <div id="test-type">
                        <p id="test-type-text">
                            Test type
                        </p>
                        <img src={`/images/${test.testSel}.svg`} alt="test-type" />
                    </div>
                    
                </div>
                <div className="sec3">

                    <div id="result-info">
                        <p id="global">
                            Global
                        </p>
                        <div id="statis">
                            {
                                test.testResult ? 
                                <img src="/images/orange.svg" alt="orange" /> :
                                <img src="/images/soda.svg" alt="soda"/>
                            }
                            {
                                test.testResult ?
                                <p id="result-desc">
                                    {test.file1} was statistically significantly preferred.        
                                </p> :
                                <p id="result-desc">
                                    {test.file2} was statistically significantly preferred.
                                </p>
                            }
                        </div>
                    </div>

                    <div id="test-result">
                        <p id="category">
                            Global
                        </p>
                        <p id="per">  
                            {
                                test.testResult ? 
                                <img src="/images/orange.svg" alt="orange" /> :
                                <img src="/images/soda.svg" alt="soda"/>
                            }
                            {Number.parseInt(test.score / (test.numOfSets * test.tester))} %
                        </p>

                        <p id="left-point">
                            {test.score} points
                        </p>

                        <BarChart per={test.score} sum={test.tester * test.numOfSets}/>
                        <p id="right-point">
                            {(test.numOfSets * test.tester) - test.score} points
                        </p>

                        <p id="sets"> 
                            {test.numOfSets} sets
                        </p>

                        <p id="p-value">
                            p-value
                        </p>
                        

                    </div>
                            

                </div>
            </div>
        </div>
    )
}


export default TestResultContainer
